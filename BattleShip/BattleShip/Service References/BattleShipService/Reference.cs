//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BattleShip.BattleShipService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/GameService")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfRegisterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfRegister {
            get {
                return this.DateOfRegisterField;
            }
            set {
                if ((this.DateOfRegisterField.Equals(value) != true)) {
                    this.DateOfRegisterField = value;
                    this.RaisePropertyChanged("DateOfRegister");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameStatistic", Namespace="http://schemas.datacontract.org/2004/07/GameService")]
    [System.SerializableAttribute()]
    public partial class GameStatistic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfGameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GameStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BattleShip.BattleShipService.Player PlayerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfGame {
            get {
                return this.DateOfGameField;
            }
            set {
                if ((this.DateOfGameField.Equals(value) != true)) {
                    this.DateOfGameField = value;
                    this.RaisePropertyChanged("DateOfGame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GameStatus {
            get {
                return this.GameStatusField;
            }
            set {
                if ((this.GameStatusField.Equals(value) != true)) {
                    this.GameStatusField = value;
                    this.RaisePropertyChanged("GameStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BattleShip.BattleShipService.Player Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BattleShipService.IPlayerService")]
    public interface IPlayerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerService/AddPlayer", ReplyAction="http://tempuri.org/IPlayerService/AddPlayerResponse")]
        void AddPlayer(BattleShip.BattleShipService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerService/AddPlayer", ReplyAction="http://tempuri.org/IPlayerService/AddPlayerResponse")]
        System.Threading.Tasks.Task AddPlayerAsync(BattleShip.BattleShipService.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerService/GetPlayerByName", ReplyAction="http://tempuri.org/IPlayerService/GetPlayerByNameResponse")]
        BattleShip.BattleShipService.Player GetPlayerByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerService/GetPlayerByName", ReplyAction="http://tempuri.org/IPlayerService/GetPlayerByNameResponse")]
        System.Threading.Tasks.Task<BattleShip.BattleShipService.Player> GetPlayerByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerServiceChannel : BattleShip.BattleShipService.IPlayerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerServiceClient : System.ServiceModel.ClientBase<BattleShip.BattleShipService.IPlayerService>, BattleShip.BattleShipService.IPlayerService {
        
        public PlayerServiceClient() {
        }
        
        public PlayerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddPlayer(BattleShip.BattleShipService.Player player) {
            base.Channel.AddPlayer(player);
        }
        
        public System.Threading.Tasks.Task AddPlayerAsync(BattleShip.BattleShipService.Player player) {
            return base.Channel.AddPlayerAsync(player);
        }
        
        public BattleShip.BattleShipService.Player GetPlayerByName(string name) {
            return base.Channel.GetPlayerByName(name);
        }
        
        public System.Threading.Tasks.Task<BattleShip.BattleShipService.Player> GetPlayerByNameAsync(string name) {
            return base.Channel.GetPlayerByNameAsync(name);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BattleShipService.IGameStatisticsService")]
    public interface IGameStatisticsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameStatisticsService/AddStatistic", ReplyAction="http://tempuri.org/IGameStatisticsService/AddStatisticResponse")]
        void AddStatistic(BattleShip.BattleShipService.GameStatistic gameStatistic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameStatisticsService/AddStatistic", ReplyAction="http://tempuri.org/IGameStatisticsService/AddStatisticResponse")]
        System.Threading.Tasks.Task AddStatisticAsync(BattleShip.BattleShipService.GameStatistic gameStatistic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameStatisticsService/GetStatisticsByPlayerName", ReplyAction="http://tempuri.org/IGameStatisticsService/GetStatisticsByPlayerNameResponse")]
        BattleShip.BattleShipService.GameStatistic[] GetStatisticsByPlayerName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameStatisticsService/GetStatisticsByPlayerName", ReplyAction="http://tempuri.org/IGameStatisticsService/GetStatisticsByPlayerNameResponse")]
        System.Threading.Tasks.Task<BattleShip.BattleShipService.GameStatistic[]> GetStatisticsByPlayerNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameStatisticsServiceChannel : BattleShip.BattleShipService.IGameStatisticsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameStatisticsServiceClient : System.ServiceModel.ClientBase<BattleShip.BattleShipService.IGameStatisticsService>, BattleShip.BattleShipService.IGameStatisticsService {
        
        public GameStatisticsServiceClient() {
        }
        
        public GameStatisticsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameStatisticsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameStatisticsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameStatisticsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddStatistic(BattleShip.BattleShipService.GameStatistic gameStatistic) {
            base.Channel.AddStatistic(gameStatistic);
        }
        
        public System.Threading.Tasks.Task AddStatisticAsync(BattleShip.BattleShipService.GameStatistic gameStatistic) {
            return base.Channel.AddStatisticAsync(gameStatistic);
        }
        
        public BattleShip.BattleShipService.GameStatistic[] GetStatisticsByPlayerName(string name) {
            return base.Channel.GetStatisticsByPlayerName(name);
        }
        
        public System.Threading.Tasks.Task<BattleShip.BattleShipService.GameStatistic[]> GetStatisticsByPlayerNameAsync(string name) {
            return base.Channel.GetStatisticsByPlayerNameAsync(name);
        }
    }
}
